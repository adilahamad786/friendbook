{"version":3,"file":"static/js/328.860d4124.chunk.js","mappings":"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","sources":["webpack://client/./src/components/commentSection/CommentSection.module.css?b6c8","webpack://client/./src/components/addComment/AddComment.module.css?9ce9","components/addComment/AddComment.jsx","webpack://client/./src/components/comment/Comment.module.css?848f","webpack://client/./src/components/options/Options.module.css?3fec","components/options/Options.jsx","webpack://client/./src/components/commentUpdate/CommentUpdate.module.css?4332","components/commentUpdate/CommentUpdate.jsx","components/comment/Comment.jsx","components/commentSection/CommentSection.jsx","webpack://client/./src/components/postUpdate/PostUpdate.module.css?dac7","components/postUpdate/PostUpdate.jsx","components/post/Post.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"container\":\"CommentSection_container__-eJRv\",\"commentsContainer\":\"CommentSection_commentsContainer__Yxtxu\"};","// extracted by mini-css-extract-plugin\nexport default {\"addComment\":\"AddComment_addComment__-vvQ8\",\"profilePicture\":\"AddComment_profilePicture__mMgDg\",\"commentForm\":\"AddComment_commentForm__3tIij\"};","import classes from \"./AddComment.module.css\";\r\nimport ProfilePicture from \"../profilePicture/ProfilePicture\";\r\nimport { SendOutlined } from \"@mui/icons-material\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { useRef, useContext, useEffect } from \"react\";\r\nimport useHttp from \"../../hooks/useHttp\";\r\nimport AuthContext from \"../../context/AuthContext\";\r\n\r\nconst AddComment = (props) => {\r\n  const { profilePictureUrl } = useSelector(state => state.user);\r\n  const messageRef = useRef();\r\n  const { token, setLogedOut } = useContext(AuthContext);\r\n  const { error: sendCommentError, sendRequest: sendComment } = useHttp();\r\n\r\n  const addComment = (e) => {\r\n    e.preventDefault();\r\n    const data = { message : messageRef.current.value };\r\n\r\n    sendComment({\r\n      url : `/api/comment/add/${props.postId}`,\r\n      method : \"POST\",\r\n      headers : {\r\n        Authorization : token,\r\n        \"Content-Type\" : \"application/json\"\r\n      },\r\n      body : JSON.stringify(data)\r\n    }, (newComment) => {\r\n      props.updateComments(newComment);\r\n    });\r\n    messageRef.current.value = \"\";\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (sendCommentError) {\r\n      alert(sendCommentError.message);\r\n      if (sendCommentError.errorType === \"unauthorized\") {\r\n        setLogedOut();\r\n      }\r\n    }\r\n  }, [sendCommentError, setLogedOut]);\r\n\r\n  return (\r\n    <div className={classes.addComment}>\r\n      <ProfilePicture className={classes.profilePicture} imageUrl={profilePictureUrl} />\r\n      <form onSubmit={addComment} className={classes.commentForm}>\r\n        <input type=\"text\" ref={messageRef}/>\r\n        <button>\r\n          <SendOutlined />\r\n        </button>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AddComment;\r\n","// extracted by mini-css-extract-plugin\nexport default {\"user\":\"Comment_user__rlWyu\",\"userInfo\":\"Comment_userInfo__+Cszm\",\"profilePicture\":\"Comment_profilePicture__BLEMW\",\"message\":\"Comment_message__WtAtS\",\"owner\":\"Comment_owner__JfOrH\",\"time\":\"Comment_time__UhKLC\",\"menu\":\"Comment_menu__S4C1-\",\"options\":\"Comment_options__ipoDk\",\"commentUpdate\":\"Comment_commentUpdate__O8RPO\"};","// extracted by mini-css-extract-plugin\nexport default {\"postOptions\":\"Options_postOptions__9imZN\",\"closeOptionButton\":\"Options_closeOptionButton__qKpBF\",\"closeOption\":\"Options_closeOption__hHBd3\",\"optionButton\":\"Options_optionButton__gwWyY\"};","import { Close } from '@mui/icons-material';\r\nimport classes from './Options.module.css';\r\n\r\nconst PostOptions = (props) => {\r\n  const updateAndClose = () => {\r\n    props.onClose();\r\n    props.update();\r\n  }\r\n  \r\n  return (\r\n    <div className={classes.postOptions}>\r\n      <button onClick={props.onClose} className={classes.closeOptionButton}><Close className={classes.closeOption} /></button>\r\n      <button onClick={updateAndClose} className={classes.optionButton}>Update</button>\r\n      <button onClick={props.delete.bind(null, props.id)} className={classes.optionButton}>Delete</button>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default PostOptions;","// extracted by mini-css-extract-plugin\nexport default {\"container\":\"CommentUpdate_container__VcVUG\",\"updateForm\":\"CommentUpdate_updateForm__Q69sr\",\"textInput\":\"CommentUpdate_textInput__LJaWr\"};","import classes from './CommentUpdate.module.css';\r\nimport { useState, useEffect } from \"react\";\r\n\r\nconst CommentUpdate = (props) => {\r\n  const [inputText, setInputText] = useState('');\r\n  const [isFormValid, setIsFormValid] = useState(false);\r\n\r\n  useEffect(() => {\r\n    if (inputText) {\r\n      setIsFormValid(true);\r\n    }\r\n    else {\r\n      setIsFormValid(false);\r\n    }\r\n  }, [inputText, setIsFormValid]);\r\n\r\n  const submitHandler = (e) => {\r\n    e.preventDefault();\r\n    props.update({ commentId : props.commentId, message : inputText});\r\n    props.onClose();\r\n  }\r\n\r\n  return (\r\n    <div className={classes.container}>\r\n      <form onSubmit={submitHandler} className={classes.updateForm}>\r\n        <input className={classes.textInput} onChange={(e) => {setInputText(e.target.value)}} value={inputText} type=\"text\" placeholder='Write your message...' />\r\n        <button disabled={!isFormValid}>Update</button>\r\n      </form>\r\n      <button onClick={props.onClose}>Close</button>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default CommentUpdate;","import classes from \"./Comment.module.css\";\r\nimport ProfilePicture from \"../profilePicture/ProfilePicture\";\r\nimport Backdrop from \"../backdrop/Backdrop\";\r\nimport Options from \"../options/Options\";\r\nimport { MoreHoriz } from \"@mui/icons-material\";\r\nimport moment from \"moment\";\r\nimport { useState } from 'react';\r\nimport { useSelector } from \"react-redux\";\r\nimport CommentUpdate from \"../commentUpdate/CommentUpdate\";\r\n\r\nconst Comment = (props) => {\r\n  const { _id: commentId, owner, message, createdAt } = props.data;\r\n  const [showOptions, setShowOptions] = useState(false);\r\n  const [showUpdateComment, setShowUpdateComment] = useState(false);\r\n  const currentUserId = useSelector(state => state.user._id);\r\n\r\n  const timeago = moment(new Date(createdAt)).fromNow();\r\n  const hasOwnComment = owner._id === currentUserId;\r\n\r\n  const showMenuHandler = () => {\r\n    setShowOptions(showOptions => !showOptions && hasOwnComment);\r\n  }\r\n\r\n  const showUpdateCommentOption = () => {\r\n    setShowUpdateComment(state => !state);\r\n  }\r\n\r\n  const closeBackdrop = () => {\r\n    setShowOptions(false);\r\n    setShowUpdateComment(false);\r\n  }\r\n\r\n  return (\r\n    <div className={classes.user}>\r\n      <div className={classes.userInfo}>\r\n        <ProfilePicture className={classes.profilePicture} imageUrl={owner.profilePictureUrl}/>\r\n        <div className={classes.message}>\r\n          <div className={classes.owner}>\r\n            <span>{owner.username.toUpperCase()}</span>\r\n            <span className={classes.time}>{timeago}</span>\r\n          </div>\r\n          <p>{message}</p> \r\n        </div>\r\n      </div>\r\n      <div className={classes.menu}>\r\n        { <MoreHoriz onClick={showMenuHandler} /> }\r\n        { showOptions && <div className={classes.options}><Options update={showUpdateCommentOption} id={commentId.toString()} delete={props.delete} onClose={showMenuHandler}/></div> }\r\n        { showUpdateComment && <div className={classes.commentUpdate}><CommentUpdate onClose={showUpdateCommentOption} update={props.update} commentId={commentId}/></div> }\r\n        { (showOptions || showUpdateComment) && <Backdrop onClose={closeBackdrop} />  }\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Comment;\r\n","import classes from \"./CommentSection.module.css\";\r\nimport AddComment from \"../addComment/AddComment\";\r\nimport Comment from \"../comment/Comment\";\r\nimport { useState, useEffect, useContext } from \"react\";\r\nimport useHttp from \"../../hooks/useHttp\";\r\nimport AuthContext from \"../../context/AuthContext\";\r\nimport { deleteElement } from \"../../helpers/deleteElement\";\r\nimport { replaceElement } from \"../../helpers/replaceElement\";\r\n\r\nfunction CommentSection(props) {\r\n  const [comments, setComments] = useState([]);\r\n  const { token, setLogedOut } = useContext(AuthContext);\r\n  const { error: commentsError, sendRequest: fetchComments } = useHttp();\r\n  const { error: deleteCommentError, sendRequest: deleteCommentRequest } = useHttp();\r\n  const { error: updateCommentError, sendRequest: updateCommentRequest } = useHttp();\r\n\r\n  useEffect(() => {\r\n    fetchComments({\r\n      url: `/api/comment/post/${props.postId.toString()}`,\r\n      headers: {\r\n        Authorization: token\r\n      }\r\n    }, (comments) => {\r\n      setComments(comments.reverse());\r\n    });\r\n  }, [fetchComments, props.postId, setComments, token]);\r\n\r\n  const deleteComment = (commentId) => {\r\n    deleteCommentRequest({\r\n      url: `/api/comment/remove/${commentId}`,\r\n      method: \"DELETE\",\r\n      headers: {\r\n        Authorization: token\r\n      }\r\n    }, (res) => {\r\n      const newComments = deleteElement(comments, res.commentId); \r\n      setComments(newComments);\r\n      props.updateCommentCounter(-1);\r\n    });\r\n  };\r\n\r\n  const updateComment = ({ commentId, message}) => {\r\n    updateCommentRequest({\r\n      url : `/api/comment/update/${commentId}`,\r\n      method : \"PATCH\",\r\n      headers : {\r\n        Authorization : token,\r\n        \"Content-Type\" : \"application/json\"\r\n      },\r\n      body : JSON.stringify({ message })\r\n    }, (updatedComment) => {\r\n      const newComments = replaceElement(comments, updatedComment);\r\n      setComments(newComments);\r\n    });\r\n  }\r\n  \r\n  useEffect(() => {\r\n    if (commentsError || deleteCommentError || updateCommentError) {\r\n      alert(commentsError.message || deleteCommentError.message || updateCommentError.message);\r\n      if (commentsError.errorType === \"unauthorized\" || deleteCommentError.errorType === \"unauthorized\" || updateCommentError.errorType === \"unauthorized\") {\r\n        setLogedOut();\r\n      }\r\n    }\r\n  }, [commentsError, deleteCommentError, updateCommentError, setLogedOut]);\r\n\r\n  const updateComments = (newComment) => {\r\n    setComments(state => [newComment, ...state]);\r\n    props.updateCommentCounter(1);\r\n  };\r\n\r\n  return (\r\n    <section className={classes.container}>\r\n      <AddComment updateComments={updateComments} postId={props.postId} />\r\n      <div className={classes.commentsContainer}>\r\n        {comments.map((comment) => {\r\n          return <Comment update={updateComment} delete={deleteComment} key={comment._id} data={comment} />;\r\n        })}\r\n      </div>\r\n    </section>\r\n  );\r\n}\r\n\r\nexport default CommentSection;\r\n","// extracted by mini-css-extract-plugin\nexport default {\"container\":\"PostUpdate_container__PbKPD\",\"updateForm\":\"PostUpdate_updateForm__oWLBk\",\"image\":\"PostUpdate_image__r2L2s\",\"textInput\":\"PostUpdate_textInput__EWwH2\"};","import classes from './PostUpdate.module.css';\r\nimport { SystemUpdateAlt } from '@mui/icons-material';\r\nimport uploadImage from \"../../assets/uploadImage.png\";\r\nimport { useState, useEffect } from \"react\";\r\n\r\nconst PostUpdate = (props) => {\r\n  const [inputImage, setInputImage] = useState(null);\r\n  const [inputText, setInputText] = useState('');\r\n  const [isFormValid, setIsFormValid] = useState(false);\r\n\r\n  useEffect(() => {\r\n    if (inputImage || inputText) {\r\n      setIsFormValid(true);\r\n    }\r\n    else {\r\n      setIsFormValid(false);\r\n    }\r\n  }, [inputImage, inputText, setIsFormValid]);\r\n\r\n  const submitHandler = (e) => {\r\n    e.preventDefault();\r\n    const formData = new FormData();\r\n\r\n    inputImage && formData.append('image', inputImage);\r\n    inputText && formData.append('message', inputText);\r\n\r\n    props.update({ postId : props.postId, formData});\r\n    props.onClose();\r\n  }\r\n\r\n  return (\r\n    <div className={classes.container}>\r\n      <form onSubmit={submitHandler} className={classes.updateForm}>\r\n        <div className={classes.image}>\r\n          <label\r\n            htmlFor=\"postImage\"\r\n            className={classes.coverPictureChangeLabel}\r\n          >\r\n            <SystemUpdateAlt />\r\n            <span>Change</span>\r\n          </label>\r\n          <img\r\n            src={\r\n              inputImage ? URL.createObjectURL(inputImage) : props.imageUrl ? props.imageUrl : uploadImage \r\n            }\r\n            className={classes.profileCoverImg}\r\n            alt=\"PostImage\"\r\n          />\r\n          <input\r\n            style={{ display: \"none\" }}\r\n            type=\"file\"\r\n            id=\"postImage\"\r\n            accept=\".png, .jpeg, .jpg\"\r\n            onChange={(e) => setInputImage(e.target.files[0])}\r\n          />\r\n        </div>\r\n        <input className={classes.textInput} onChange={(e) => {setInputText(e.target.value)}} value={inputText} type=\"text\" placeholder='Write your message...' />\r\n        <button disabled={!isFormValid}> Update </button>\r\n      </form>\r\n      <button onClick={props.onClose}>Close</button>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default PostUpdate;","import classes from \"./Post.module.css\";\r\nimport {\r\n  MoreHoriz,\r\n  FavoriteOutlined,\r\n  FavoriteBorderOutlined,\r\n  TextsmsOutlined,\r\n  ShareOutlined\r\n} from \"@mui/icons-material\";\r\nimport { Link } from \"react-router-dom\";\r\nimport ProfilePicture from \"../../components/profilePicture/ProfilePicture\";\r\nimport CommentSection from \"../commentSection/CommentSection\";\r\nimport { useState, useContext, useEffect } from \"react\";\r\nimport Options from \"../options/Options\";\r\nimport Backdrop from \"../backdrop/Backdrop\";\r\nimport moment from \"moment\"\r\nimport useHttp from \"../../hooks/useHttp\";\r\nimport AuthContext from \"../../context/AuthContext\";\r\nimport { useSelector } from \"react-redux\";\r\nimport PostUpdate from \"../postUpdate/PostUpdate\";\r\n\r\nconst Post = (props) => {\r\n  const { _id: postId, createdAt, owner, imageUrl, message } = props.post;\r\n  const [liked, setLiked] = useState(false);\r\n  const [likeCounter, setLikeCounter] = useState(props.post.likeCounter);\r\n  const [showComments, setShowComments] = useState(false);\r\n  const [commentCounter, setCommentCounter] = useState(props.post.commentCounter);\r\n  const [showOptions, setShowOptions] = useState(false);\r\n  const [showUpdatePost, setShowUpdatePost] = useState(false);\r\n  const { token, setLogedOut } = useContext(AuthContext);\r\n  const { error: likeError, sendRequest: sendLikeRequest } = useHttp();\r\n  const { error: likeStatusError, sendRequest: getLikeStatus } = useHttp();\r\n  const currentUeserId = useSelector(state => state.user._id);\r\n\r\n  const timeago = moment(new Date(createdAt)).fromNow();\r\n  const hasOwnPost = owner._id === currentUeserId;\r\n\r\n  useEffect(() => {\r\n    getLikeStatus({\r\n      url : `/api/like/status/${postId}`,\r\n      headers : {\r\n        Authorization : token\r\n      }\r\n    }, (res) => {\r\n      setLiked(res.liked);\r\n    });\r\n  }, [getLikeStatus, postId, token, setLiked]);\r\n\r\n  const likeHandler = () => {\r\n    sendLikeRequest({\r\n      url : `/api/like/${postId}`,\r\n      method : \"PUT\",\r\n      headers : {\r\n        Authorization : token\r\n      }\r\n    }, (res) => {\r\n      setLiked(res.liked);\r\n      setLikeCounter(state => state + (res.liked ? 1 : -1));\r\n    });\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (likeError || likeStatusError) {\r\n      alert(likeError.message || likeStatusError.message);\r\n      if (likeError.errorType === \"unauthorized\" || likeStatusError.errorType === \"unauthorized\") {\r\n        setLogedOut();\r\n      }\r\n    }\r\n  }, [likeError, likeStatusError, setLogedOut]);\r\n\r\n  const showCommentHandler = () => {\r\n    setShowComments(showComments => !showComments);\r\n  }\r\n  \r\n  const updateCommentCounter = (add) => {\r\n    setCommentCounter(state => state + add);\r\n  }\r\n\r\n  const showMenuHandler = () => {\r\n    setShowOptions(showOptions => !showOptions && hasOwnPost);\r\n  }\r\n\r\n  const showUpdatePostOption = () => {\r\n    setShowUpdatePost(state => !state);\r\n  }\r\n\r\n  const closeBackdrop = () => {\r\n    setShowOptions(false);\r\n    setShowUpdatePost(false);\r\n    setShowComments(false);\r\n  }\r\n\r\n  return (\r\n    <div className={classes.post}>\r\n      <div className={classes.user}>\r\n        <Link to={`/profile/${owner._id}`} className={classes.userInfo}>\r\n          <ProfilePicture imageUrl={owner.profilePictureUrl} />\r\n          <div className={classes.details}>\r\n            <span className={classes.username}>{owner.username.toUpperCase()}</span>\r\n            <span className={classes.time}>{timeago}</span>\r\n          </div>\r\n        </Link>\r\n        <div className={classes.menu}>\r\n          { !showOptions && <MoreHoriz onClick={showMenuHandler} /> }\r\n          { showOptions && <Options update={showUpdatePostOption} delete={props.deletePost.bind(null, postId)} onClose={showMenuHandler} /> }\r\n          { showUpdatePost && <div className={classes.postUpdate}><PostUpdate onClose={showUpdatePostOption} update={props.updatePost} postId={postId.toString()} imageUrl={imageUrl}/></div> }\r\n          { (showOptions || showUpdatePost || showComments) && <Backdrop onClose={closeBackdrop} /> }\r\n        </div>\r\n      </div>\r\n      <div className={classes.content}>\r\n        <div className={classes.message}>\r\n          <p>{message}</p>\r\n        </div>\r\n        <div className={classes.image}>\r\n          { \r\n            imageUrl && <img className={classes.postImage} src={imageUrl} alt=\"PostImage\" /> }\r\n        </div>\r\n      </div>\r\n      <div className={classes.options}>\r\n        <div onClick={likeHandler} className={classes.option}>\r\n          {liked ? <FavoriteOutlined className={classes.optionIcon} /> : <FavoriteBorderOutlined className={classes.optionIcon} />}\r\n          <span>{`${likeCounter} Likes`}</span>\r\n        </div>\r\n        <div onClick={showCommentHandler} className={classes.option}>\r\n          <TextsmsOutlined className={classes.optionIcon} />\r\n          <span>{`${commentCounter} Comments`}</span>\r\n        </div>\r\n        <div className={classes.option}>\r\n          <ShareOutlined className={classes.optionIcon} />\r\n          <span>Share</span>\r\n        </div>\r\n      </div>\r\n      {showComments && <CommentSection updateCommentCounter={updateCommentCounter} postId={postId}/>}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Post;\r\n"],"names":["props","profilePictureUrl","useSelector","state","user","messageRef","useRef","useContext","AuthContext","token","setLogedOut","useHttp","sendCommentError","error","sendComment","sendRequest","useEffect","alert","message","errorType","className","classes","ProfilePicture","imageUrl","onSubmit","e","preventDefault","data","current","value","url","postId","method","headers","Authorization","body","JSON","stringify","newComment","updateComments","type","ref","SendOutlined","onClick","onClose","Close","update","delete","bind","id","useState","inputText","setInputText","isFormValid","setIsFormValid","commentId","onChange","target","placeholder","disabled","_id","owner","createdAt","showOptions","setShowOptions","showUpdateComment","setShowUpdateComment","currentUserId","timeago","moment","Date","fromNow","hasOwnComment","showMenuHandler","showUpdateCommentOption","username","toUpperCase","MoreHoriz","Options","toString","Backdrop","comments","setComments","commentsError","fetchComments","deleteCommentError","deleteCommentRequest","updateCommentError","updateCommentRequest","reverse","deleteComment","res","newComments","deleteElement","updateCommentCounter","updateComment","updatedComment","replaceElement","map","comment","inputImage","setInputImage","formData","FormData","append","htmlFor","SystemUpdateAlt","src","URL","createObjectURL","uploadImage","alt","style","display","accept","files","post","liked","setLiked","likeCounter","setLikeCounter","showComments","setShowComments","commentCounter","setCommentCounter","showUpdatePost","setShowUpdatePost","likeError","sendLikeRequest","likeStatusError","getLikeStatus","currentUeserId","hasOwnPost","showUpdatePostOption","to","deletePost","updatePost","FavoriteOutlined","FavoriteBorderOutlined","TextsmsOutlined","ShareOutlined","add"],"sourceRoot":""}